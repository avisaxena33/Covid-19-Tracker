[{"/Users/aviralsaxena/Desktop/covid-19/src/index.js":"1","/Users/aviralsaxena/Desktop/covid-19/src/app/index.js":"2","/Users/aviralsaxena/Desktop/covid-19/src/components/Home/index.js":"3","/Users/aviralsaxena/Desktop/covid-19/src/all_states.js":"4","/Users/aviralsaxena/Desktop/covid-19/src/components/Navbar/index.js":"5","/Users/aviralsaxena/Desktop/covid-19/src/components/StatsTable/index.js":"6","/Users/aviralsaxena/Desktop/covid-19/src/components/TotalSidebar/index.js":"7"},{"size":488,"mtime":1608621699259,"results":"8","hashOfConfig":"9"},{"size":519,"mtime":1609574940969,"results":"10","hashOfConfig":"9"},{"size":4007,"mtime":1609574302600,"results":"11","hashOfConfig":"9"},{"size":4030,"mtime":1608706760063,"results":"12","hashOfConfig":"9"},{"size":1062,"mtime":1609574633133,"results":"13","hashOfConfig":"9"},{"size":5201,"mtime":1609573087193,"results":"14","hashOfConfig":"9"},{"size":928,"mtime":1609574439859,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1plf74i",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"/Users/aviralsaxena/Desktop/covid-19/src/index.js",[],["36","37"],"/Users/aviralsaxena/Desktop/covid-19/src/app/index.js",["38"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// Component imports\nimport Home from \"../components/Home\"\nimport Navbar from \"../components/Navbar\"\nimport { useHistory } from 'react-router-dom';\n\nconst App = () => {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"*\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/aviralsaxena/Desktop/covid-19/src/components/Home/index.js",["39"],"import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport StatsTable from '../StatsTable';\nimport TotalSidebar from '../TotalSidebar';\n\nconst Home = () => {\n    const all_countries_url = 'https://corona.lmao.ninja/v2/countries?yesterday&sort';\n    const global_url = 'https://corona.lmao.ninja/v2/all?yesterday';\n    const usa_states_url = 'https://corona.lmao.ninja/v2/states?sort&yesterday';\n    const usa_url = 'https://corona.lmao.ninja/v2/countries/USA?yesterday=true&strict=true&query';\n    const canada_url = 'https://corona.lmao.ninja/v2/countries/Canada?yesterday=true&strict=true&query'\n    const jhu_url = 'https://corona.lmao.ninja/v2/jhucsse';\n    \n    const [countriesResponse, setCountriesResponse] = useState([]);\n    const [globalResponse, setGlobalResponse] = useState({});\n    const [usaStatesResponse, setUsaStatesResponse] = useState({});\n    const [usaResponse, setUsaResponse] = useState({});\n    const [canadaResponse, setCanadaResponse] = useState({});\n    const [canadaProvincesResponse, setCanadaProvincesResponse] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(true);\n\n    const fetchAllData = async() => {\n        await Promise.all([fetchAllCountriesData(), fetchGlobalData(), fetchUsaStatesData(), fetchUsaData(), fetchCanadaData(), fetchCanadaProvinceData()]);\n        setIsLoading(false);\n    }\n\n    const fetchAllCountriesData = async() => {\n        const response = await fetch(all_countries_url);\n        const results = await response.json();\n        results.forEach(country => {\n            country['name'] = country['country']\n        });\n        setCountriesResponse(results);\n    }\n\n    const fetchGlobalData = async() => {\n        const response = await fetch(global_url);\n        const results = await response.json();\n        setGlobalResponse(results);\n    }\n\n    const fetchUsaStatesData = async() => {\n        const response = await fetch(usa_states_url);\n        const results = await response.json();\n        results.forEach(state => {\n            state['name'] = state['state'];\n        });\n        setUsaStatesResponse(results);\n    }\n\n    const fetchUsaData = async() => {\n        const response = await fetch(usa_url);\n        const results = await response.json();\n        setUsaResponse(results);\n    }\n\n    const fetchCanadaData = async() => {\n        const response = await fetch(canada_url);\n        const results = await response.json();\n        setCanadaResponse(results);\n    }\n\n    const fetchCanadaProvinceData = async() => {\n        const response = await fetch(jhu_url);\n        const results = await response.json();\n        let provinces = [];\n        results.forEach(province => {\n            if (province.country === 'Canada') {\n                province['name'] = province['province'];\n                province['cases'] = province['stats']['confirmed'];\n                province['deaths'] = province['stats']['deaths'];\n                province['recovered'] = province['stats']['recovered'];\n                provinces.push(province);\n            }\n        });\n        setCanadaProvincesResponse(provinces);\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchAllData();\n    }, [])\n\n    if (isLoading) {\n        return (\n            <>\n                <div className=\"home\">\n                <h1>Loading ...</h1>\n            </div>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <div className=\"home\">\n                <TotalSidebar globalData={globalResponse} />\n                <div className=\"data__tables\">\n                    <StatsTable countriesData={countriesResponse} globalData={globalResponse} title='World Statistics' />\n                    <StatsTable countriesData={usaStatesResponse} globalData={usaResponse} title='USA Statistics' />\n                    <StatsTable countriesData={canadaProvincesResponse} globalData={canadaResponse} title='Canada Statistics' />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home\n","/Users/aviralsaxena/Desktop/covid-19/src/all_states.js",[],"/Users/aviralsaxena/Desktop/covid-19/src/components/Navbar/index.js",["40","41","42"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom'\nimport './index.css'\n// list of every state + abbrev\nimport all_states from '../../all_states'\n\nconst MainNavbar = () => {\n    return (\n        <>\n            <div className=\"navbar\">\n                <div className=\"navbar__left\">\n                    <Link to=\"/\" className=\"navbar-title\">\n                        <h3 className=\"navbar__option\">Covid-19 Tracker</h3>\n                    </Link>\n                    <Link to=\"/usa\" className=\"navbar-title\">\n                        <h3 className=\"navbar__option\">USA</h3>\n                    </Link>\n                    <Link to=\"/about/covid\" className=\"navbar-title\">\n                        <h3 className=\"navbar__option\">Covid-19</h3>\n                    </Link>\n                    <Link to=\"/about/me\" className=\"navbar-title\">\n                        <h3 className=\"navbar__option\">About Me</h3>\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MainNavbar\n","/Users/aviralsaxena/Desktop/covid-19/src/components/StatsTable/index.js",["43","44","45","46","47","48","49","50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nconst StatsTable = ({ countriesData, globalData, title }) => {\n    const [searchText, setSearchText] = useState('');\n\n    useEffect(() => {\n        applyFilters();\n    }, [searchText])\n\n    const applyFilters = () => {\n        let filter = searchText.toUpperCase();\n        let table = document.getElementById(title);\n        let tr = table.getElementsByTagName(\"tr\");\n        for (let i = 0; i < tr.length; i++) {\n            let td = tr[i].getElementsByTagName(\"td\")[0];\n            if (td) {\n              let txtValue = td.textContent || td.innerText;\n              if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                tr[i].style.display = \"\";\n              } else {\n                tr[i].style.display = \"none\";\n              }\n            }\n        }\n    }\n\n    return (\n        <>\n            <div className=\"country__table\">\n                <div className=\"top\">\n                    <h2>{title}</h2>\n                    <input class=\"search\" type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"search here\" />\n                </div>\n                <div className=\"country__table__scroll\">\n                    <table id={title}>\n                        <tr>\n                            <th>Country</th>\n                            <th>Total Cases</th>\n                            <th>Cases Today</th>\n                            <th>Cases Per Million</th>\n                            <th>Total Deaths</th>\n                            <th>Deaths Today</th>\n                            <th>Deaths Per Million</th>\n                            <th>Activate Cases</th>\n                            <th>Total Tests</th>\n                            <th>Total Recovered</th>\n                            <th>Total Critical</th>\n                        </tr>\n                        <tr>\n                            <td className=\"flag__container\">TOTAL</td>\n                            <td className=\"cases__color\">{globalData.cases}</td>\n                            <td className=\"cases__color\">{globalData.todayCases}</td>\n                            <td className=\"cases__color\">{globalData.casesPerOneMillion}</td>\n                            <td className=\"death__color\">{globalData.deaths}</td>\n                            <td className=\"death__color\">{globalData.todayDeaths}</td>\n                            <td className=\"death__color\">{globalData.deathsPerOneMillion}</td>\n                            <td className=\"active__color\">{globalData.active}</td>\n                            <td className=\"active__color\">{globalData.tests}</td>\n                            <td className=\"recovered__color\">{globalData.recovered}</td>\n                            <td className=\"critical__color\">{globalData.critical}</td>\n                        </tr>\n                        {countriesData.map((country) => {\n                            return (\n                                <>\n                                    <tr>\n                                        <td className=\"flag__container\">\n                                            {country.countryInfo && country.countryInfo.flag && <img src={country.countryInfo.flag} className=\"flag\"></img>}\n                                            {country.name}\n                                        </td>\n                                        <td className=\"cases__color\">{country.cases || country.cases == 0 ? country.cases : 'Unknown'}</td>\n                                        <td className=\"cases__color\">{country.todayCases || country.todayCases == 0  ? country.todayCases : 'Unknown'}</td>\n                                        <td className=\"cases__color\">{country.casesPerOneMillion || country.casesPerOneMillion == 0  ? country.casesPerOneMillion : 'Unknown'}</td>\n                                        <td className=\"death__color\">{country.deaths || country.deaths == 0 ? country.deaths : 'Unknown'}</td>\n                                        <td className=\"death__color\">{country.todayDeaths || country.todayDeaths == 0  ? country.todayDeaths : 'Unknown'}</td>\n                                        <td className=\"death__color\">{country.deathsPerOneMillion || country.deathsPerOneMillion == 0  ? country.deathsPerOneMillion : 'Unknown'}</td>\n                                        <td className=\"active__color\">{country.active || country.active == 0  ? country.active : 'Unknown'}</td>\n                                        <td className=\"active__color\">{country.tests || country.tests == 0  ? country.tests : 'Unknown'}</td>\n                                        <td className=\"recovered__color\">{country.recovered || country.recovered == 0  ? country.recovered : 'Unknown'}</td>\n                                        <td className=\"critical__color\">{country.critical || country.critical == 0  ? country.critical : 'Unknown'}</td>\n                                    </tr>\n                                </>\n                            )\n                        })}\n                    </table>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default StatsTable;\n","/Users/aviralsaxena/Desktop/covid-19/src/components/TotalSidebar/index.js",["55","56","57"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom'\nimport './index.css'\n\nconst TotalSidebar = ({ globalData }) => {\n    return (\n        <>\n            <div className=\"sidebar\">\n                <h1>World Totals</h1>\n                <h1 className=\"cases__color\">Cases: {globalData.cases}</h1>\n                <h1 className=\"death__color\">Deaths: {globalData.deaths}</h1>\n                <h1 className=\"active__color\">Activate Cases: {globalData.active}</h1>\n                <h1 className=\"critical__color\">Critical Cases: {globalData.critical}</h1>\n                <h1 className=\"recovered__color\">Recovered: {globalData.recovered}</h1>\n                <h1 className=\"recovered__color\">Tests: {globalData.tests}</h1>\n                <h1 className=\"death__color\">Countries Affected: {globalData.affectedCountries}</h1>\n            </div>\n        </>\n    )\n}\n\nexport default TotalSidebar;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":9,"nodeType":"64","messageId":"65","endLine":8,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":83,"column":8,"nodeType":"68","endLine":83,"endColumn":10,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"70","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":20},{"ruleId":"62","severity":1,"message":"72","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":18},{"ruleId":"66","severity":1,"message":"73","line":9,"column":8,"nodeType":"68","endLine":9,"endColumn":20,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":68,"column":97,"nodeType":"77","endLine":68,"endColumn":150},{"ruleId":"78","severity":1,"message":"79","line":71,"column":102,"nodeType":"80","messageId":"81","endLine":71,"endColumn":104},{"ruleId":"78","severity":1,"message":"79","line":72,"column":112,"nodeType":"80","messageId":"81","endLine":72,"endColumn":114},{"ruleId":"78","severity":1,"message":"79","line":73,"column":128,"nodeType":"80","messageId":"81","endLine":73,"endColumn":130},{"ruleId":"78","severity":1,"message":"79","line":74,"column":104,"nodeType":"80","messageId":"81","endLine":74,"endColumn":106},{"ruleId":"78","severity":1,"message":"79","line":75,"column":114,"nodeType":"80","messageId":"81","endLine":75,"endColumn":116},{"ruleId":"78","severity":1,"message":"79","line":76,"column":130,"nodeType":"80","messageId":"81","endLine":76,"endColumn":132},{"ruleId":"78","severity":1,"message":"79","line":77,"column":105,"nodeType":"80","messageId":"81","endLine":77,"endColumn":107},{"ruleId":"78","severity":1,"message":"79","line":78,"column":103,"nodeType":"80","messageId":"81","endLine":78,"endColumn":105},{"ruleId":"78","severity":1,"message":"79","line":79,"column":114,"nodeType":"80","messageId":"81","endLine":79,"endColumn":116},{"ruleId":"78","severity":1,"message":"79","line":80,"column":111,"nodeType":"80","messageId":"81","endLine":80,"endColumn":113},{"ruleId":"62","severity":1,"message":"70","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":20},{"ruleId":"62","severity":1,"message":"82","line":2,"column":22,"nodeType":"64","messageId":"65","endLine":2,"endColumn":26},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllData'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'all_states' is defined but never used.","React Hook useEffect has a missing dependency: 'applyFilters'. Either include it or remove the dependency array.",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [fetchAllData]",{"range":"91","text":"92"},"Update the dependencies array to be: [applyFilters, searchText]",{"range":"93","text":"94"},[3203,3205],"[fetchAllData]",[246,258],"[applyFilters, searchText]"]